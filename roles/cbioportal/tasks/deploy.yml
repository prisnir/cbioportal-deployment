---
- name: cBioPortal | Create directories
  command: mkdir -p {{ item.path }} creates={{ item.path }}
  with_items:
    - { path: '{{webapp_directory}}' }
    - { path: '{{webapp_log_directory}}' }
    - { path: '{{webapp_pid_directory}}' }

- name: cBioPortal | Copy the built portal overlay to replace the default
  command: >
    cp {{build_overlay_dir}}/target/cbioportal-octane-{{cbioportal_overlay_version.stdout | replace('version=', '')}}.war {{webapp_directory}}/cbioportal-{{cbioportal_version.stdout | replace('version=', '')}}.war

- name: cBioPortal | Copy the built scripts jar
  command: >
    cp {{build_webapp_dir}}/scripts/target/scripts-{{cbioportal_version.stdout | replace('version=', '')}}.jar {{webapp_directory}}

- name: cBioPortal | Copy the built runner executable
  command: >
    cp {{build_importer_dir}}/target/cbioportal-importer-{{cbioportal_importer_version.stdout | replace('version=', '')}}-jar-with-dependencies.jar {{webapp_directory}}/cbioportal-importer-{{cbioportal_importer_version.stdout | replace('version=', '')}}.jar

- name: cBioPortal | Download Jetty
  get_url:
    dest: '{{jetty_target}}'
    url: '{{jetty_url}}'

- name: cBioPortal | Write configuration files
  template: src={{ item.src }} dest={{ item.dest }} mode={{ item.mode }}
  notify:
    - restart service
  with_items:
    - { src: "cbioportal.xml.j2", dest: "{{webapp_directory}}/cbioportal.xml", mode: '0755' }
    - { src: "cbioportal-import.xml.j2", dest: "{{webapp_directory}}/cbioportal-import.xml", mode: '0755' }
    - { src: "override-web.xml.j2", dest: "{{webapp_directory}}/override-web.xml", mode: '0755' }
    - { src: "cbioportal.init.j2", dest: "/etc/init.d/{{webapp_service_name}}", mode: '0755' }
    - { src: "cbioportal-webapp.xml.j2", dest: "/tmp/cbioportal-webapp.xml", mode: '0755' }

## Slightly cunning. cat the file to put the templated content into
## a variable. Then we can write it into the cBioPortal master
## Jetty config.

- name: cBioPortal | Read the templated configuration
  command: cat /tmp/cbioportal-webapp.xml
  register: cbioportal_webapp_xml_data

- name: cBioPortal | Edit the configuration file body
  blockinfile:
    dest: "{{webapp_directory}}/cbioportal.xml"
    marker: "<!-- {mark} WEBAPP -->"
    block: |
      {{ cbioportal_webapp_xml_data.stdout }}

- name: cBioPortal | Edit the configuration file handler
  blockinfile:
    dest: "{{webapp_directory}}/cbioportal.xml"
    marker: "<!-- {mark} WEBAPP HANDLER -->"
    block: '<Item><Ref refid="webapp"/></Item>'

- name: cBioPortal | Copy patched portal.properties
  copy:
    src: "{{build_webapp_dir}}/src/main/resources/portal.properties"
    dest: "{{webapp_directory}}/portal.properties"

# - name: cBioPortal | Patch portal.properties
#   lineinfile:
#     dest: "{{build_webapp_dir}}/portal.properties"
#     regexp: '^db.version\s*=\s*(.*)$'
#     line: "db.version={{cbioportal_db_version.stdout | replace('version=', '')}}"
#     state: present
#     insertafter: EOF
#     backrefs: no
#
- name: cBioPortal | Update the database schema
  shell: >
     yes | python {{build_webapp_dir}}/core/src/main/scripts/migrate_db.py -p {{webapp_directory}}/portal.properties -s {{build_webapp_dir}}/core/src/main/resources/db/migration.sql

- name: cBioPortal | Create user
  user: name={{webapp_service_user}} comment="{{webapp_service_user}} webapp" state=present

- name: cBioPortal | Assign files to the user
  file: path={{ item.path }} recurse=yes owner={{webapp_service_user}} group=adm mode={{ item.mode }}
  with_items:
    - { path: '{{webapp_log_directory}}', mode: '0750' }
    - { path: '{{webapp_pid_directory}}', mode: '0750' }
    - { path: '{{webapp_directory}}', mode: '0755' }
